//// [tests/cases/compiler/-test/-57087-35-eopt.ts] ////

=== -57087-35-eopt.ts ===
interface Garg35A {
    ({x,y}:{x:1, y:1}): "111"
>x : 1
>y : 1
>x : 1
>y : 1

};
interface Garg35B {
    ({x,y}:{x?:2, y?:1}): "221"
>x : 2 | undefined
>y : 1 | undefined
>x : 2 | undefined
>y : 1 | undefined

    ({x,y}:{x:2, y?:2}): "222";
>x : 2
>y : 2 | undefined
>x : 2
>y : 2 | undefined

};

declare const f35a: { ({x,y}:{x:1, y:1}): "111"; ({x,y}:{x?:2, y?:1}): "221"; ({x,y}:{x:2, y?:2}): "222"; }
>f35a : { ({ x, y }: { x: 1; y: 1; }): "111"; ({ x, y }: { x?: 2; y?: 1; }): "221"; ({ x, y }: { x: 2; y?: 2; }): "222"; }
>x : 1
>y : 1
>x : 1
>y : 1
>x : 2 | undefined
>y : 1 | undefined
>x : 2 | undefined
>y : 1 | undefined
>x : 2
>y : 2 | undefined
>x : 2
>y : 2 | undefined

f35a satisfies Garg35A & Garg35B; // should satisfy
>f35a satisfies Garg35A & Garg35B : { ({ x, y }: { x: 1; y: 1; }): "111"; ({ x, y }: { x?: 2; y?: 1; }): "221"; ({ x, y }: { x: 2; y?: 2; }): "222"; }
>f35a : { ({ x, y }: { x: 1; y: 1; }): "111"; ({ x, y }: { x?: 2; y?: 1; }): "221"; ({ x, y }: { x: 2; y?: 2; }): "222"; }

declare const f35b: { ({x,y}:{x:1, y:1}): "111"; ({x,y}:{x?:2, y?:1}): "221"; ({x,y}:{x:2, y:2}): "222"; }
>f35b : { ({ x, y }: { x: 1; y: 1; }): "111"; ({ x, y }: { x?: 2; y?: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }
>x : 1
>y : 1
>x : 1
>y : 1
>x : 2 | undefined
>y : 1 | undefined
>x : 2 | undefined
>y : 1 | undefined
>x : 2
>y : 2
>x : 2
>y : 2

f35b satisfies Garg35A & Garg35B; // should satisfy
>f35b satisfies Garg35A & Garg35B : { ({ x, y }: { x: 1; y: 1; }): "111"; ({ x, y }: { x?: 2; y?: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }
>f35b : { ({ x, y }: { x: 1; y: 1; }): "111"; ({ x, y }: { x?: 2; y?: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }

declare const f35c: { ({x,y}:{x:1, y:1}): "111"; (arg:Record<string,never>): "221"; ({x}:{x:2}): "221"; ({y}:{y:1}): "221"; ({x,y}:{x:2, y:1}): "221"; ({x,y}:{x:2, y:2}): "222"; }
>f35c : { ({ x, y }: { x: 1; y: 1; }): "111"; (arg: Record<string, never>): "221"; ({ x }: { x: 2; }): "221"; ({ y }: { y: 1; }): "221"; ({ x, y }: { x: 2; y: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }
>x : 1
>y : 1
>x : 1
>y : 1
>arg : Record<string, never>
>x : 2
>x : 2
>y : 1
>y : 1
>x : 2
>y : 1
>x : 2
>y : 1
>x : 2
>y : 2
>x : 2
>y : 2

f35c satisfies Garg35A & Garg35B; // should satisfy
>f35c satisfies Garg35A & Garg35B : { ({ x, y }: { x: 1; y: 1; }): "111"; (arg: Record<string, never>): "221"; ({ x }: { x: 2; }): "221"; ({ y }: { y: 1; }): "221"; ({ x, y }: { x: 2; y: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }
>f35c : { ({ x, y }: { x: 1; y: 1; }): "111"; (arg: Record<string, never>): "221"; ({ x }: { x: 2; }): "221"; ({ y }: { y: 1; }): "221"; ({ x, y }: { x: 2; y: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }

const t1 = f35c({}); // no error, return 221
>t1 : "221"
>f35c({}) : "221"
>f35c : { ({ x, y }: { x: 1; y: 1; }): "111"; (arg: Record<string, never>): "221"; ({ x }: { x: 2; }): "221"; ({ y }: { y: 1; }): "221"; ({ x, y }: { x: 2; y: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }
>{} : {}

declare const f35d: { ({x,y}:{x:1, y:1}): "111"; (arg:Record<string,never>): "221"; /*({x}:{x:2}): "221";*/ ({y}:{y:1}): "221"; ({x,y}:{x:2, y:1}): "221"; ({x,y}:{x:2, y:2}): "222"; }
>f35d : { ({ x, y }: { x: 1; y: 1; }): "111"; (arg: Record<string, never>): "221"; ({ y }: { y: 1; }): "221"; ({ x, y }: { x: 2; y: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }
>x : 1
>y : 1
>x : 1
>y : 1
>arg : Record<string, never>
>y : 1
>y : 1
>x : 2
>y : 1
>x : 2
>y : 1
>x : 2
>y : 2
>x : 2
>y : 2

f35d satisfies Garg35A & Garg35B; // should satisfy
>f35d satisfies Garg35A & Garg35B : { ({ x, y }: { x: 1; y: 1; }): "111"; (arg: Record<string, never>): "221"; ({ y }: { y: 1; }): "221"; ({ x, y }: { x: 2; y: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }
>f35d : { ({ x, y }: { x: 1; y: 1; }): "111"; (arg: Record<string, never>): "221"; ({ y }: { y: 1; }): "221"; ({ x, y }: { x: 2; y: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }

const t2 = f35d({x:2}); // error expected - no overload matches this call
>t2 : never
>f35d({x:2}) : never
>f35d : { ({ x, y }: { x: 1; y: 1; }): "111"; (arg: Record<string, never>): "221"; ({ y }: { y: 1; }): "221"; ({ x, y }: { x: 2; y: 1; }): "221"; ({ x, y }: { x: 2; y: 2; }): "222"; }
>{x:2} : { x: 2; }
>x : 2
>2 : 2

//              ~~~~~

