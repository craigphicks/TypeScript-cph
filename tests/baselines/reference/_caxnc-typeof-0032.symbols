=== tests/cases/conformance/_caxnc/_caxnc-typeof-0032.ts ===
declare const a: number|string;
>a : Symbol(a, Decl(_caxnc-typeof-0032.ts, 0, 13))

declare const b: number|boolean;
>b : Symbol(b, Decl(_caxnc-typeof-0032.ts, 1, 13))

const xa = typeof a;
>xa : Symbol(xa, Decl(_caxnc-typeof-0032.ts, 2, 5))
>a : Symbol(a, Decl(_caxnc-typeof-0032.ts, 0, 13))

const xb = typeof b;
>xb : Symbol(xb, Decl(_caxnc-typeof-0032.ts, 3, 5))
>b : Symbol(b, Decl(_caxnc-typeof-0032.ts, 1, 13))

if (a===b){
>a : Symbol(a, Decl(_caxnc-typeof-0032.ts, 0, 13))
>b : Symbol(b, Decl(_caxnc-typeof-0032.ts, 1, 13))

    a;
>a : Symbol(a, Decl(_caxnc-typeof-0032.ts, 0, 13))

    xa;
>xa : Symbol(xa, Decl(_caxnc-typeof-0032.ts, 2, 5))

    b;
>b : Symbol(b, Decl(_caxnc-typeof-0032.ts, 1, 13))

    xb;
>xb : Symbol(xb, Decl(_caxnc-typeof-0032.ts, 3, 5))
}
else {
    a;
>a : Symbol(a, Decl(_caxnc-typeof-0032.ts, 0, 13))

    xa;
>xa : Symbol(xa, Decl(_caxnc-typeof-0032.ts, 2, 5))

    b;
>b : Symbol(b, Decl(_caxnc-typeof-0032.ts, 1, 13))

    xb;
>xb : Symbol(xb, Decl(_caxnc-typeof-0032.ts, 3, 5))
}

