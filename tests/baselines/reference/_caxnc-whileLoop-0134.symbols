//// [tests/cases/conformance/_caxnc-loop/_caxnc-whileLoop-0134.ts] ////

=== _caxnc-whileLoop-0134.ts ===
declare function maybe(): boolean;
>maybe : Symbol(maybe, Decl(_caxnc-whileLoop-0134.ts, 0, 0))

function t34(){
>t34 : Symbol(t34, Decl(_caxnc-whileLoop-0134.ts, 0, 34))

    let b1 = true;
>b1 : Symbol(b1, Decl(_caxnc-whileLoop-0134.ts, 2, 7))

    let b2 = true;
>b2 : Symbol(b2, Decl(_caxnc-whileLoop-0134.ts, 3, 7))

    // loop1: // unused labels are not allowed TS7028

    while (b1){
>b1 : Symbol(b1, Decl(_caxnc-whileLoop-0134.ts, 2, 7))

        b1;b2;
>b1 : Symbol(b1, Decl(_caxnc-whileLoop-0134.ts, 2, 7))
>b2 : Symbol(b2, Decl(_caxnc-whileLoop-0134.ts, 3, 7))

        while (b2){
>b2 : Symbol(b2, Decl(_caxnc-whileLoop-0134.ts, 3, 7))

            b1;b2;
>b1 : Symbol(b1, Decl(_caxnc-whileLoop-0134.ts, 2, 7))
>b2 : Symbol(b2, Decl(_caxnc-whileLoop-0134.ts, 3, 7))

            if (maybe()) {
>maybe : Symbol(maybe, Decl(_caxnc-whileLoop-0134.ts, 0, 0))

                b2=false;
>b2 : Symbol(b2, Decl(_caxnc-whileLoop-0134.ts, 3, 7))

                break ;//loop1;
            }
        }
        b1;b2;
>b1 : Symbol(b1, Decl(_caxnc-whileLoop-0134.ts, 2, 7))
>b2 : Symbol(b2, Decl(_caxnc-whileLoop-0134.ts, 3, 7))

        //if (maybe()) break;
    }
    b1;b2;
>b1 : Symbol(b1, Decl(_caxnc-whileLoop-0134.ts, 2, 7))
>b2 : Symbol(b2, Decl(_caxnc-whileLoop-0134.ts, 3, 7))
}

