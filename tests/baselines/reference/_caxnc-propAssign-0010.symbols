//// [tests/cases/conformance/_caxnc-prop/_caxnc-propAssign-0010.ts] ////

=== _caxnc-propAssign-0010.ts ===
declare type T = { u: U, t: T };
>T : Symbol(T, Decl(_caxnc-propAssign-0010.ts, 0, 0))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 0, 18))
>U : Symbol(U, Decl(_caxnc-propAssign-0010.ts, 0, 32))
>t : Symbol(t, Decl(_caxnc-propAssign-0010.ts, 0, 24))
>T : Symbol(T, Decl(_caxnc-propAssign-0010.ts, 0, 0))

declare type U = { u?: U, t: T };
>U : Symbol(U, Decl(_caxnc-propAssign-0010.ts, 0, 32))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18))
>U : Symbol(U, Decl(_caxnc-propAssign-0010.ts, 0, 32))
>t : Symbol(t, Decl(_caxnc-propAssign-0010.ts, 1, 25))
>T : Symbol(T, Decl(_caxnc-propAssign-0010.ts, 0, 0))

declare const tu1:T | U | undefined;
>tu1 : Symbol(tu1, Decl(_caxnc-propAssign-0010.ts, 2, 13))
>T : Symbol(T, Decl(_caxnc-propAssign-0010.ts, 0, 0))
>U : Symbol(U, Decl(_caxnc-propAssign-0010.ts, 0, 32))

//declare const tu2:T | U;
function propAssign0001_2(): any {
>propAssign0001_2 : Symbol(propAssign0001_2, Decl(_caxnc-propAssign-0010.ts, 2, 36))

    if (tu1?.u?.t.u.u){
>tu1?.u?.t.u.u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18))
>tu1?.u?.t.u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 0, 18))
>tu1?.u?.t : Symbol(t, Decl(_caxnc-propAssign-0010.ts, 1, 25))
>tu1?.u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18), Decl(_caxnc-propAssign-0010.ts, 0, 18))
>tu1 : Symbol(tu1, Decl(_caxnc-propAssign-0010.ts, 2, 13))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18), Decl(_caxnc-propAssign-0010.ts, 0, 18))
>t : Symbol(t, Decl(_caxnc-propAssign-0010.ts, 1, 25))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 0, 18))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18))

        // tu1;
        // tu1.u;
        // tu1.u.t;
        // tu1.u.t.u;
        // tu1.u.t.u.u;
        tu1.u.t.u.u = undefined;
>tu1.u.t.u.u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18))
>tu1.u.t.u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 0, 18))
>tu1.u.t : Symbol(t, Decl(_caxnc-propAssign-0010.ts, 1, 25))
>tu1.u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18), Decl(_caxnc-propAssign-0010.ts, 0, 18))
>tu1 : Symbol(tu1, Decl(_caxnc-propAssign-0010.ts, 2, 13))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18), Decl(_caxnc-propAssign-0010.ts, 0, 18))
>t : Symbol(t, Decl(_caxnc-propAssign-0010.ts, 1, 25))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 0, 18))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18))
>undefined : Symbol(undefined)

        // @ts-dev-debugger
        tu1.u.t.u.u;
>tu1.u.t.u.u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18))
>tu1.u.t.u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 0, 18))
>tu1.u.t : Symbol(t, Decl(_caxnc-propAssign-0010.ts, 1, 25))
>tu1.u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18), Decl(_caxnc-propAssign-0010.ts, 0, 18))
>tu1 : Symbol(tu1, Decl(_caxnc-propAssign-0010.ts, 2, 13))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18), Decl(_caxnc-propAssign-0010.ts, 0, 18))
>t : Symbol(t, Decl(_caxnc-propAssign-0010.ts, 1, 25))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 0, 18))
>u : Symbol(u, Decl(_caxnc-propAssign-0010.ts, 1, 18))

        // tu1;
        // tu1.u;
        // tu1.u.t;
        // tu1.u.t.u;
        // tu1.u.t.u.u;
        // return tu1;
    }
}

