=== tests/cases/conformance/_cax/_cax-eqneq-0002.ts ===
// declare function f(x:1,y:1): 1;
// declare function f(x:2,y:2): 2;
// declare function f(x:3,y:3): 2;

declare const a: 1|2|3;
>a : Symbol(a, Decl(_cax-eqneq-0002.ts, 4, 13))

declare const b: 2|3|4;
>b : Symbol(b, Decl(_cax-eqneq-0002.ts, 5, 13))

declare const c: 3|4|5;
>c : Symbol(c, Decl(_cax-eqneq-0002.ts, 6, 13))

//if (a!==b||b!==c)
if (a===b&&b===c)
>a : Symbol(a, Decl(_cax-eqneq-0002.ts, 4, 13))
>b : Symbol(b, Decl(_cax-eqneq-0002.ts, 5, 13))
>b : Symbol(b, Decl(_cax-eqneq-0002.ts, 5, 13))
>c : Symbol(c, Decl(_cax-eqneq-0002.ts, 6, 13))
{
    let x = a===c;
>x : Symbol(x, Decl(_cax-eqneq-0002.ts, 10, 7))
>a : Symbol(a, Decl(_cax-eqneq-0002.ts, 4, 13))
>c : Symbol(c, Decl(_cax-eqneq-0002.ts, 6, 13))

    x;
>x : Symbol(x, Decl(_cax-eqneq-0002.ts, 10, 7))

    a;
>a : Symbol(a, Decl(_cax-eqneq-0002.ts, 4, 13))

    b;
>b : Symbol(b, Decl(_cax-eqneq-0002.ts, 5, 13))

    c;
>c : Symbol(c, Decl(_cax-eqneq-0002.ts, 6, 13))

}
else {
    let y = a===c;
>y : Symbol(y, Decl(_cax-eqneq-0002.ts, 18, 7))
>a : Symbol(a, Decl(_cax-eqneq-0002.ts, 4, 13))
>c : Symbol(c, Decl(_cax-eqneq-0002.ts, 6, 13))

    y;
>y : Symbol(y, Decl(_cax-eqneq-0002.ts, 18, 7))

    a;
>a : Symbol(a, Decl(_cax-eqneq-0002.ts, 4, 13))

    b;
>b : Symbol(b, Decl(_cax-eqneq-0002.ts, 5, 13))

    c;
>c : Symbol(c, Decl(_cax-eqneq-0002.ts, 6, 13))

    if (a===c){
>a : Symbol(a, Decl(_cax-eqneq-0002.ts, 4, 13))
>c : Symbol(c, Decl(_cax-eqneq-0002.ts, 6, 13))

        let z = a===c;
>z : Symbol(z, Decl(_cax-eqneq-0002.ts, 24, 11))
>a : Symbol(a, Decl(_cax-eqneq-0002.ts, 4, 13))
>c : Symbol(c, Decl(_cax-eqneq-0002.ts, 6, 13))

        z;
>z : Symbol(z, Decl(_cax-eqneq-0002.ts, 24, 11))

        a;
>a : Symbol(a, Decl(_cax-eqneq-0002.ts, 4, 13))

        b;
>b : Symbol(b, Decl(_cax-eqneq-0002.ts, 5, 13))

        c;
>c : Symbol(c, Decl(_cax-eqneq-0002.ts, 6, 13))
    }
}

