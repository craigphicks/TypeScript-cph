//// [tests/cases/conformance/_caxnc/_caxnc-fn-0008.ts] ////

=== _caxnc-fn-0008.ts ===
declare interface FooA {
>FooA : Symbol(FooA, Decl(_caxnc-fn-0008.ts, 0, 0))

    foo(b:string): "A";
>foo : Symbol(FooA.foo, Decl(_caxnc-fn-0008.ts, 0, 24), Decl(_caxnc-fn-0008.ts, 1, 23))
>b : Symbol(b, Decl(_caxnc-fn-0008.ts, 1, 8))

    foo(...args:any[]): unknown;
>foo : Symbol(FooA.foo, Decl(_caxnc-fn-0008.ts, 0, 24), Decl(_caxnc-fn-0008.ts, 1, 23))
>args : Symbol(args, Decl(_caxnc-fn-0008.ts, 2, 8))
}
declare const obja: FooA;
>obja : Symbol(obja, Decl(_caxnc-fn-0008.ts, 4, 13))
>FooA : Symbol(FooA, Decl(_caxnc-fn-0008.ts, 0, 0))

declare const arg: string;
>arg : Symbol(arg, Decl(_caxnc-fn-0008.ts, 5, 13))

const x = obja.foo(arg);
>x : Symbol(x, Decl(_caxnc-fn-0008.ts, 6, 5))
>obja.foo : Symbol(FooA.foo, Decl(_caxnc-fn-0008.ts, 0, 24), Decl(_caxnc-fn-0008.ts, 1, 23))
>obja : Symbol(obja, Decl(_caxnc-fn-0008.ts, 4, 13))
>foo : Symbol(FooA.foo, Decl(_caxnc-fn-0008.ts, 0, 24), Decl(_caxnc-fn-0008.ts, 1, 23))
>arg : Symbol(arg, Decl(_caxnc-fn-0008.ts, 5, 13))

x; // x should be unknown
>x : Symbol(x, Decl(_caxnc-fn-0008.ts, 6, 5))

