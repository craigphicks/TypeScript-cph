//// [tests/cases/conformance/_caxnc-loop/_caxnc-whileLoop-0101.ts] ////

=== _caxnc-whileLoop-0101.ts ===
// This loop terminates at 1 iteration
function t1(){
>t1 : Symbol(t1, Decl(_caxnc-whileLoop-0101.ts, 0, 0))

    let b = true;
>b : Symbol(b, Decl(_caxnc-whileLoop-0101.ts, 2, 7))

    b;
>b : Symbol(b, Decl(_caxnc-whileLoop-0101.ts, 2, 7))

    while (b){
>b : Symbol(b, Decl(_caxnc-whileLoop-0101.ts, 2, 7))

        let c = !b;
>c : Symbol(c, Decl(_caxnc-whileLoop-0101.ts, 6, 11))
>b : Symbol(b, Decl(_caxnc-whileLoop-0101.ts, 2, 7))

        c;
>c : Symbol(c, Decl(_caxnc-whileLoop-0101.ts, 6, 11))

        let d = b;
>d : Symbol(d, Decl(_caxnc-whileLoop-0101.ts, 8, 11))
>b : Symbol(b, Decl(_caxnc-whileLoop-0101.ts, 2, 7))

        d;
>d : Symbol(d, Decl(_caxnc-whileLoop-0101.ts, 8, 11))

        b = c;
>b : Symbol(b, Decl(_caxnc-whileLoop-0101.ts, 2, 7))
>c : Symbol(c, Decl(_caxnc-whileLoop-0101.ts, 6, 11))
    }
    let e = b;
>e : Symbol(e, Decl(_caxnc-whileLoop-0101.ts, 12, 7))
>b : Symbol(b, Decl(_caxnc-whileLoop-0101.ts, 2, 7))

    e;
>e : Symbol(e, Decl(_caxnc-whileLoop-0101.ts, 12, 7))

    b;
>b : Symbol(b, Decl(_caxnc-whileLoop-0101.ts, 2, 7))
}
