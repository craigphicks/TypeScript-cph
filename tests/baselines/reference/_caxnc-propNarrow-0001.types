=== tests/cases/conformance/_caxnc-prop/_caxnc-propNarrow-0001.ts ===
declare const x: boolean;
>x : boolean

// @ts-dev-expect-string "count: 0, effectiveDeclaredTsType: { a: 1; } | { a: 2; b: number; }"
let r = x ? { a: 1 as const } : { a: 2 as const, b: 2 };
>r : { a: 1; b?: undefined; } | { a: 2; b: number; }
>x ? { a: 1 as const } : { a: 2 as const, b: 2 } : { a: 1; } | { a: 2; b: number; }
>x : boolean
>{ a: 1 as const } : { a: 1; }
>a : 1
>1 as const : 1
>1 : 1
>{ a: 2 as const, b: 2 } : { a: 2; b: number; }
>a : 2
>2 as const : 2
>2 : 2
>b : number
>2 : 2

if (r.b){
>r.b : number | undefined
>r : { a: 1; } | { a: 2; b: number; }
>b : number | undefined

    r;
>r : { a: 2; b: number; }

    r.a
>r.a : 2
>r : { a: 2; b: number; }
>a : 2

    r.b
>r.b : number
>r : { a: 2; b: number; }
>b : number
}
else {
    r;
>r : { a: 1; } | { a: 2; b: number; }

    r.a
>r.a : 1 | 2
>r : { a: 1; } | { a: 2; b: number; }
>a : 1 | 2

    r.b
>r.b : number | undefined
>r : { a: 1; } | { a: 2; b: number; }
>b : number | undefined
}

