=== tests/cases/conformance/_cax/_cax-fn-0011.ts ===
declare const bar: boolean;
>bar : Symbol(bar, Decl(_cax-fn-0011.ts, 0, 13))

declare function isTrue(b:true): true;
>isTrue : Symbol(isTrue, Decl(_cax-fn-0011.ts, 0, 27), Decl(_cax-fn-0011.ts, 1, 38))
>b : Symbol(b, Decl(_cax-fn-0011.ts, 1, 24))

declare function isTrue(b:false): false;
>isTrue : Symbol(isTrue, Decl(_cax-fn-0011.ts, 0, 27), Decl(_cax-fn-0011.ts, 1, 38))
>b : Symbol(b, Decl(_cax-fn-0011.ts, 2, 24))

const rab2 = bar ? !isTrue(bar) : isTrue(bar);
>rab2 : Symbol(rab2, Decl(_cax-fn-0011.ts, 3, 5))
>bar : Symbol(bar, Decl(_cax-fn-0011.ts, 0, 13))
>isTrue : Symbol(isTrue, Decl(_cax-fn-0011.ts, 0, 27), Decl(_cax-fn-0011.ts, 1, 38))
>bar : Symbol(bar, Decl(_cax-fn-0011.ts, 0, 13))
>isTrue : Symbol(isTrue, Decl(_cax-fn-0011.ts, 0, 27), Decl(_cax-fn-0011.ts, 1, 38))
>bar : Symbol(bar, Decl(_cax-fn-0011.ts, 0, 13))

const foo = rab2;
>foo : Symbol(foo, Decl(_cax-fn-0011.ts, 4, 5))
>rab2 : Symbol(rab2, Decl(_cax-fn-0011.ts, 3, 5))

if (foo) {
>foo : Symbol(foo, Decl(_cax-fn-0011.ts, 4, 5))

    rab2;
>rab2 : Symbol(rab2, Decl(_cax-fn-0011.ts, 3, 5))
}
if (rab2) {
>rab2 : Symbol(rab2, Decl(_cax-fn-0011.ts, 3, 5))

    foo;
>foo : Symbol(foo, Decl(_cax-fn-0011.ts, 4, 5))
}

