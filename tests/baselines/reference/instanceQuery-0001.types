//// [tests/cases/conformance/-instanceQuery/instanceQuery-0001.ts] ////

=== instanceQuery-0001.ts ===
namespace instof000 {}

namespace instof0002 {
>instof0002 : typeof instof0002
>           : ^^^^^^^^^^^^^^^^^

    declare let a: ArrayBuffer;
>a : ArrayBuffer
>  : ^^^^^^^^^^^

    declare let b: instanceof ArrayBuffer;
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    a = b; // should not Error
>a = b : instanceof ArrayBuffer & ArrayBuffer
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : ArrayBuffer
>  : ^^^^^^^^^^^
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    b = a; // should Error
>b = a : ArrayBuffer
>      : ^^^^^^^^^^^
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : ArrayBuffer
>  : ^^^^^^^^^^^

}
namespace instof0003 {
>instof0003 : typeof instof0003
>           : ^^^^^^^^^^^^^^^^^

    let a: ArrayBuffer | undefined;
>a : ArrayBuffer | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^

    let b = new ArrayBuffer(0);
>b : ArrayBuffer
>  : ^^^^^^^^^^^
>new ArrayBuffer(0) : ArrayBuffer
>                   : ^^^^^^^^^^^
>ArrayBuffer : ArrayBufferConstructor
>            : ^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    a = b; // should not error
>a = b : ArrayBuffer
>      : ^^^^^^^^^^^
>a : ArrayBuffer | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^
>b : ArrayBuffer
>  : ^^^^^^^^^^^
}
namespace instof0003 {
>instof0003 : typeof instof0003
>           : ^^^^^^^^^^^^^^^^^

    declare let a: ArrayBuffer;
>a : ArrayBuffer
>  : ^^^^^^^^^^^

    let b = new ArrayBuffer(0) as instanceof ArrayBuffer;
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>new ArrayBuffer(0) as instanceof ArrayBuffer : instanceof ArrayBuffer & ArrayBuffer
>                                             : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>new ArrayBuffer(0) : ArrayBuffer
>                   : ^^^^^^^^^^^
>ArrayBuffer : ArrayBufferConstructor
>            : ^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    b = a ; // should Error
>b = a : ArrayBuffer
>      : ^^^^^^^^^^^
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : ArrayBuffer
>  : ^^^^^^^^^^^
}
namespace instof005 {
>instof005 : typeof instof005
>          : ^^^^^^^^^^^^^^^^

    declare let a: instanceof ArrayBuffer;
>a : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    let b = new ArrayBuffer(0) as instanceof ArrayBuffer;
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>new ArrayBuffer(0) as instanceof ArrayBuffer : instanceof ArrayBuffer & ArrayBuffer
>                                             : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>new ArrayBuffer(0) : ArrayBuffer
>                   : ^^^^^^^^^^^
>ArrayBuffer : ArrayBufferConstructor
>            : ^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    b = a ; // should not Error
>b = a : instanceof ArrayBuffer & ArrayBuffer
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    a = b ; // should not Error
>a = b : instanceof ArrayBuffer & ArrayBuffer
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
}

namespace instof006 {
>instof006 : typeof instof006
>          : ^^^^^^^^^^^^^^^^

    declare function safeDataView(buffer: instanceof ArrayBuffer): DataView;
>safeDataView : (buffer: instanceof ArrayBuffer) => DataView
>             : ^      ^^                      ^^^^^        
>buffer : instanceof ArrayBuffer & ArrayBuffer
>       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    safeDataView(new ArrayBuffer(0)); // should error
>safeDataView(new ArrayBuffer(0)) : DataView
>                                 : ^^^^^^^^
>safeDataView : (buffer: instanceof ArrayBuffer) => DataView
>             : ^      ^^                      ^^^^^^^^^^^^^
>new ArrayBuffer(0) : ArrayBuffer
>                   : ^^^^^^^^^^^
>ArrayBuffer : ArrayBufferConstructor
>            : ^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    safeDataView(new ArrayBuffer(0) as instanceof ArrayBuffer); // should not error
>safeDataView(new ArrayBuffer(0) as instanceof ArrayBuffer) : DataView
>                                                           : ^^^^^^^^
>safeDataView : (buffer: instanceof ArrayBuffer) => DataView
>             : ^      ^^                      ^^^^^^^^^^^^^
>new ArrayBuffer(0) as instanceof ArrayBuffer : instanceof ArrayBuffer & ArrayBuffer
>                                             : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>new ArrayBuffer(0) : ArrayBuffer
>                   : ^^^^^^^^^^^
>ArrayBuffer : ArrayBufferConstructor
>            : ^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    declare let a: ArrayBuffer;
>a : ArrayBuffer
>  : ^^^^^^^^^^^

    safeDataView(a); // should error
>safeDataView(a) : DataView
>                : ^^^^^^^^
>safeDataView : (buffer: instanceof ArrayBuffer) => DataView
>             : ^      ^^                      ^^^^^^^^^^^^^
>a : ArrayBuffer
>  : ^^^^^^^^^^^

    declare let b: instanceof ArrayBuffer;
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    safeDataView(b); // should not error
>safeDataView(b) : DataView
>                : ^^^^^^^^
>safeDataView : (buffer: instanceof ArrayBuffer) => DataView
>             : ^      ^^                      ^^^^^^^^^^^^^
>b : instanceof ArrayBuffer & ArrayBuffer
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

}
