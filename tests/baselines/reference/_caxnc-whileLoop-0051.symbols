//// [tests/cases/conformance/_caxnc-loop/_caxnc-whileLoop-0051.ts] ////

=== _caxnc-whileLoop-0051.ts ===
function t51(){
>t51 : Symbol(t51, Decl(_caxnc-whileLoop-0051.ts, 0, 0))

    // @ts-dev-expect-string "count: 0, effectiveDeclaredTsType: number"
    let d1 = 0;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))

    while (true){
        d1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))

        if (d1===0) d1=1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))

        else if (d1===1) d1=2;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))

        else if (d1===2) d1=3;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))

        else if (d1===3) {
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))

            d1=0;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))

            break;
        }
    }
    d1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0051.ts, 2, 7))
}

