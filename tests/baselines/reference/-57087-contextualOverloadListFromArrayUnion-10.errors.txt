-57087-contextualOverloadListFromArrayUnion-10.ts(10,30): error TS2345: Argument of type '(x: string) => unknown' is not assignable to parameter of type '((value: number[], index: number, array: number[][]) => unknown) & ((value: string, index: number, array: string[]) => unknown)'.
  Type '(x: string) => unknown' is not assignable to type '(value: number[], index: number, array: number[][]) => unknown'.
    Types of parameters 'x' and 'value' are incompatible.
      Type 'number[]' is not assignable to type 'string'.


==== -57087-contextualOverloadListFromArrayUnion-10.ts (1 errors) ====
    declare const y1: number[][] | string[];
    export const yThen1 = y1.map(item => item.length);
    
    declare function f12<T extends {length:number}>(x: T): number;
    export const yThen2 = y1.map(f12);
    
    export const yThen2a = y1.map(<T extends {length:number}>(x:T)=>x.length);
    
    declare function f14<T extends {length:number}>(): (x: T) => unknown;
    export const yThen4 = y1.map(f14()); // should not be an error
                                 ~~~~~
!!! error TS2345: Argument of type '(x: string) => unknown' is not assignable to parameter of type '((value: number[], index: number, array: number[][]) => unknown) & ((value: string, index: number, array: string[]) => unknown)'.
!!! error TS2345:   Type '(x: string) => unknown' is not assignable to type '(value: number[], index: number, array: number[][]) => unknown'.
!!! error TS2345:     Types of parameters 'x' and 'value' are incompatible.
!!! error TS2345:       Type 'number[]' is not assignable to type 'string'.
    
    export const yThen4a = y1.map(<T extends {length:number}>()=>(x: T) => x.length);
    
    declare const f15: { (x: number[]): number; (x: string): number;}
    export const yThen5 = y1.map(f15);
    
    
    
    