//// [tests/cases/conformance/_caxnc-callexprArgs/_caxnc-callexprArgs-0011.ts] ////

=== _caxnc-callexprArgs-0011.ts ===
declare function f(p:1,q:1): 1;
>f : Symbol(f, Decl(_caxnc-callexprArgs-0011.ts, 0, 0), Decl(_caxnc-callexprArgs-0011.ts, 0, 31), Decl(_caxnc-callexprArgs-0011.ts, 1, 31), Decl(_caxnc-callexprArgs-0011.ts, 2, 31))
>p : Symbol(p, Decl(_caxnc-callexprArgs-0011.ts, 0, 19))
>q : Symbol(q, Decl(_caxnc-callexprArgs-0011.ts, 0, 23))

declare function f(p:2,q:2): 2;
>f : Symbol(f, Decl(_caxnc-callexprArgs-0011.ts, 0, 0), Decl(_caxnc-callexprArgs-0011.ts, 0, 31), Decl(_caxnc-callexprArgs-0011.ts, 1, 31), Decl(_caxnc-callexprArgs-0011.ts, 2, 31))
>p : Symbol(p, Decl(_caxnc-callexprArgs-0011.ts, 1, 19))
>q : Symbol(q, Decl(_caxnc-callexprArgs-0011.ts, 1, 23))

declare function f(p:3,q:3): 3;
>f : Symbol(f, Decl(_caxnc-callexprArgs-0011.ts, 0, 0), Decl(_caxnc-callexprArgs-0011.ts, 0, 31), Decl(_caxnc-callexprArgs-0011.ts, 1, 31), Decl(_caxnc-callexprArgs-0011.ts, 2, 31))
>p : Symbol(p, Decl(_caxnc-callexprArgs-0011.ts, 2, 19))
>q : Symbol(q, Decl(_caxnc-callexprArgs-0011.ts, 2, 23))

declare function f(...args:any[]): never;
>f : Symbol(f, Decl(_caxnc-callexprArgs-0011.ts, 0, 0), Decl(_caxnc-callexprArgs-0011.ts, 0, 31), Decl(_caxnc-callexprArgs-0011.ts, 1, 31), Decl(_caxnc-callexprArgs-0011.ts, 2, 31))
>args : Symbol(args, Decl(_caxnc-callexprArgs-0011.ts, 3, 19))

declare const a: 1|2|3;
>a : Symbol(a, Decl(_caxnc-callexprArgs-0011.ts, 4, 13))

declare const b: 1|2|3;
>b : Symbol(b, Decl(_caxnc-callexprArgs-0011.ts, 5, 13))

const rt = f(a,b);
>rt : Symbol(rt, Decl(_caxnc-callexprArgs-0011.ts, 7, 5))
>f : Symbol(f, Decl(_caxnc-callexprArgs-0011.ts, 0, 0), Decl(_caxnc-callexprArgs-0011.ts, 0, 31), Decl(_caxnc-callexprArgs-0011.ts, 1, 31), Decl(_caxnc-callexprArgs-0011.ts, 2, 31))
>a : Symbol(a, Decl(_caxnc-callexprArgs-0011.ts, 4, 13))
>b : Symbol(b, Decl(_caxnc-callexprArgs-0011.ts, 5, 13))

if (rt === 1) {
>rt : Symbol(rt, Decl(_caxnc-callexprArgs-0011.ts, 7, 5))

    a;b;
>a : Symbol(a, Decl(_caxnc-callexprArgs-0011.ts, 4, 13))
>b : Symbol(b, Decl(_caxnc-callexprArgs-0011.ts, 5, 13))
}
else if (rt === 2) {
>rt : Symbol(rt, Decl(_caxnc-callexprArgs-0011.ts, 7, 5))

    a;b;
>a : Symbol(a, Decl(_caxnc-callexprArgs-0011.ts, 4, 13))
>b : Symbol(b, Decl(_caxnc-callexprArgs-0011.ts, 5, 13))
}
else if (rt === 3) {
>rt : Symbol(rt, Decl(_caxnc-callexprArgs-0011.ts, 7, 5))

    a;b;
>a : Symbol(a, Decl(_caxnc-callexprArgs-0011.ts, 4, 13))
>b : Symbol(b, Decl(_caxnc-callexprArgs-0011.ts, 5, 13))
}
else {
    a;b;
>a : Symbol(a, Decl(_caxnc-callexprArgs-0011.ts, 4, 13))
>b : Symbol(b, Decl(_caxnc-callexprArgs-0011.ts, 5, 13))
}
a;b;
>a : Symbol(a, Decl(_caxnc-callexprArgs-0011.ts, 4, 13))
>b : Symbol(b, Decl(_caxnc-callexprArgs-0011.ts, 5, 13))

