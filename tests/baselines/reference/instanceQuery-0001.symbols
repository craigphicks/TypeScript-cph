//// [tests/cases/conformance/-instanceQuery/instanceQuery-0001.ts] ////

=== instanceQuery-0001.ts ===
namespace instof000 {}
>instof000 : Symbol(instof000, Decl(instanceQuery-0001.ts, 0, 0))

namespace instof0002 {
>instof0002 : Symbol(instof0002, Decl(instanceQuery-0001.ts, 0, 22))

    declare let a: ArrayBuffer;
>a : Symbol(a, Decl(instanceQuery-0001.ts, 3, 15))
>ArrayBuffer : Symbol(ArrayBuffer, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    declare let b: instanceof ArrayBuffer;
>b : Symbol(b, Decl(instanceQuery-0001.ts, 4, 15))

    a = b; // should not Error
>a : Symbol(a, Decl(instanceQuery-0001.ts, 3, 15))
>b : Symbol(b, Decl(instanceQuery-0001.ts, 4, 15))

    b = a; // should Error
>b : Symbol(b, Decl(instanceQuery-0001.ts, 4, 15))
>a : Symbol(a, Decl(instanceQuery-0001.ts, 3, 15))

}
namespace instof0003 {
>instof0003 : Symbol(instof0003, Decl(instanceQuery-0001.ts, 8, 1), Decl(instanceQuery-0001.ts, 13, 1))

    let a: ArrayBuffer | undefined;
>a : Symbol(a, Decl(instanceQuery-0001.ts, 10, 7))
>ArrayBuffer : Symbol(ArrayBuffer, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    let b = new ArrayBuffer(0);
>b : Symbol(b, Decl(instanceQuery-0001.ts, 11, 7))
>ArrayBuffer : Symbol(ArrayBuffer, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    a = b; // should not error
>a : Symbol(a, Decl(instanceQuery-0001.ts, 10, 7))
>b : Symbol(b, Decl(instanceQuery-0001.ts, 11, 7))
}
namespace instof0003 {
>instof0003 : Symbol(instof0003, Decl(instanceQuery-0001.ts, 8, 1), Decl(instanceQuery-0001.ts, 13, 1))

    declare let a: ArrayBuffer;
>a : Symbol(a, Decl(instanceQuery-0001.ts, 15, 15))
>ArrayBuffer : Symbol(ArrayBuffer, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    let b = new ArrayBuffer(0) as instanceof ArrayBuffer;
>b : Symbol(b, Decl(instanceQuery-0001.ts, 16, 7))
>ArrayBuffer : Symbol(ArrayBuffer, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    b = a ; // should Error
>b : Symbol(b, Decl(instanceQuery-0001.ts, 16, 7))
>a : Symbol(a, Decl(instanceQuery-0001.ts, 15, 15))
}
namespace instof005 {
>instof005 : Symbol(instof005, Decl(instanceQuery-0001.ts, 18, 1))

    declare let a: instanceof ArrayBuffer;
>a : Symbol(a, Decl(instanceQuery-0001.ts, 20, 15))

    let b = new ArrayBuffer(0) as instanceof ArrayBuffer;
>b : Symbol(b, Decl(instanceQuery-0001.ts, 21, 7))
>ArrayBuffer : Symbol(ArrayBuffer, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    b = a ; // should not Error
>b : Symbol(b, Decl(instanceQuery-0001.ts, 21, 7))
>a : Symbol(a, Decl(instanceQuery-0001.ts, 20, 15))

    a = b ; // should not Error
>a : Symbol(a, Decl(instanceQuery-0001.ts, 20, 15))
>b : Symbol(b, Decl(instanceQuery-0001.ts, 21, 7))
}

namespace instof006 {
>instof006 : Symbol(instof006, Decl(instanceQuery-0001.ts, 24, 1))

    declare function safeDataView(buffer: instanceof ArrayBuffer): DataView;
>safeDataView : Symbol(safeDataView, Decl(instanceQuery-0001.ts, 26, 21))
>buffer : Symbol(buffer, Decl(instanceQuery-0001.ts, 28, 34))
>DataView : Symbol(DataView, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    safeDataView(new ArrayBuffer(0)); // should error
>safeDataView : Symbol(safeDataView, Decl(instanceQuery-0001.ts, 26, 21))
>ArrayBuffer : Symbol(ArrayBuffer, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    safeDataView(new ArrayBuffer(0) as instanceof ArrayBuffer); // should not error
>safeDataView : Symbol(safeDataView, Decl(instanceQuery-0001.ts, 26, 21))
>ArrayBuffer : Symbol(ArrayBuffer, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    declare let a: ArrayBuffer;
>a : Symbol(a, Decl(instanceQuery-0001.ts, 34, 15))
>ArrayBuffer : Symbol(ArrayBuffer, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    safeDataView(a); // should error
>safeDataView : Symbol(safeDataView, Decl(instanceQuery-0001.ts, 26, 21))
>a : Symbol(a, Decl(instanceQuery-0001.ts, 34, 15))

    declare let b: instanceof ArrayBuffer;
>b : Symbol(b, Decl(instanceQuery-0001.ts, 37, 15))

    safeDataView(b); // should not error
>safeDataView : Symbol(safeDataView, Decl(instanceQuery-0001.ts, 26, 21))
>b : Symbol(b, Decl(instanceQuery-0001.ts, 37, 15))

}
