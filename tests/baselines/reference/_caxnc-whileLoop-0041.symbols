//// [tests/cases/conformance/_caxnc-loop/_caxnc-whileLoop-0041.ts] ////

=== _caxnc-whileLoop-0041.ts ===
// declare function next(x:0): 1;
// declare function next(x:1): 2;
// declare function next(x:2): 3;
// declare function next(x:3): 0;
// declare function next(d:D): D;

function t4(){
>t4 : Symbol(t4, Decl(_caxnc-whileLoop-0041.ts, 0, 0))

    type D = 0 | 1 | 2 | 3 ;
>D : Symbol(D, Decl(_caxnc-whileLoop-0041.ts, 6, 14))

    let d1: D = 0;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))
>D : Symbol(D, Decl(_caxnc-whileLoop-0041.ts, 6, 14))

    while (true){
        d1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))

        if (d1===0) d1=1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))

        else if (d1===1) d1=2;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))

        else if (d1===2) d1=3;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))

        else if (d1===3) {
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))

            d1=0;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))

            break;
        }
    }
    d1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0041.ts, 8, 7))
}

