=== tests/cases/conformance/_caxnc/_caxnc-eqneq-0013.ts ===
// declare function f(x:1,y:1): 1;
// declare function f(x:2,y:2): 2;
// declare function f(x:3,y:3): 2;

declare const a: 1|2|3;
>a : 1 | 2 | 3

declare const b: 2|3|4;
>b : 2 | 3 | 4

declare const c: 3|4|5;
>c : 3 | 4 | 5

const aeqb=a===b;
>aeqb : boolean
>a===b : boolean
>a : 1 | 2 | 3
>b : 2 | 3 | 4

const beqc=b===c;
>beqc : boolean
>b===c : boolean
>b : 2 | 3 | 4
>c : 3 | 4 | 5

const aeqc=a===c;
>aeqc : boolean
>a===c : boolean
>a : 1 | 2 | 3
>c : 3 | 4 | 5

if (aeqb&&beqc)
>aeqb&&beqc : boolean
>aeqb : boolean
>beqc : boolean
{
    aeqb;
>aeqb : true

    beqc;
>beqc : true

    aeqc;
>aeqc : true

    a;
>a : 3

    b;
>b : 3

    c;
>c : 3

    let x1 = a===b;
>x1 : boolean
>a===b : boolean
>a : 3
>b : 3

    let y1 = b===c;
>y1 : boolean
>b===c : boolean
>b : 3
>c : 3

    let z1 = a===c;
>z1 : boolean
>a===c : boolean
>a : 3
>c : 3

    x1;
>x1 : true

    y1;
>y1 : true

    z1;
>z1 : true
}
else {
    aeqb;
>aeqb : boolean

    beqc;
>beqc : boolean

    aeqc;
>aeqc : boolean

    a;
>a : 1 | 2 | 3

    b;
>b : 2 | 3 | 4

    c;
>c : 3 | 4 | 5

    let x2 = a===b;
>x2 : boolean
>a===b : boolean
>a : 1 | 2 | 3
>b : 2 | 3 | 4

    let y2 = b===c;
>y2 : boolean
>b===c : boolean
>b : 2 | 3 | 4
>c : 3 | 4 | 5

    let z2 = a===c;
>z2 : boolean
>a===c : boolean
>a : 1 | 2 | 3
>c : 3 | 4 | 5

    x2;
>x2 : boolean

    y2;
>y2 : boolean

    z2;
>z2 : boolean

    if (aeqc){
>aeqc : boolean

        aeqb;
>aeqb : boolean

        beqc;
>beqc : boolean

        aeqc;
>aeqc : true

        a;
>a : 3

        b;
>b : 2 | 3 | 4

        c;
>c : 3

        let x3 = a===b;
>x3 : boolean
>a===b : boolean
>a : 3
>b : 2 | 3 | 4

        let y3 = b===c;
>y3 : boolean
>b===c : boolean
>b : 2 | 3 | 4
>c : 3

        let z3 = a===c;
>z3 : boolean
>a===c : boolean
>a : 3
>c : 3

        x3;
>x3 : boolean

        y3;
>y3 : boolean

        z3;
>z3 : true
    }
}

