//// [tests/cases/conformance/_caxnc/_caxnc-and-025.ts] ////

=== _caxnc-and-025.ts ===
declare const b1: true | false;
>b1 : Symbol(b1, Decl(_caxnc-and-025.ts, 0, 13))

declare const b2: true | false;
>b2 : Symbol(b2, Decl(_caxnc-and-025.ts, 1, 13))

const ba = (b1 && b2)
>ba : Symbol(ba, Decl(_caxnc-and-025.ts, 2, 5))
>b1 : Symbol(b1, Decl(_caxnc-and-025.ts, 0, 13))
>b2 : Symbol(b2, Decl(_caxnc-and-025.ts, 1, 13))

  ? [b1,b2]  
>b1 : Symbol(b1, Decl(_caxnc-and-025.ts, 0, 13))
>b2 : Symbol(b2, Decl(_caxnc-and-025.ts, 1, 13))

  : (b1 || b2) 
>b1 : Symbol(b1, Decl(_caxnc-and-025.ts, 0, 13))
>b2 : Symbol(b2, Decl(_caxnc-and-025.ts, 1, 13))

    ? (b1) 
>b1 : Symbol(b1, Decl(_caxnc-and-025.ts, 0, 13))

      ? [b1,b2] // b2 should be false
>b1 : Symbol(b1, Decl(_caxnc-and-025.ts, 0, 13))
>b2 : Symbol(b2, Decl(_caxnc-and-025.ts, 1, 13))

      : [b1,b2] // b2 should be true
>b1 : Symbol(b1, Decl(_caxnc-and-025.ts, 0, 13))
>b2 : Symbol(b2, Decl(_caxnc-and-025.ts, 1, 13))

    : [b1,b2]
>b1 : Symbol(b1, Decl(_caxnc-and-025.ts, 0, 13))
>b2 : Symbol(b2, Decl(_caxnc-and-025.ts, 1, 13))

