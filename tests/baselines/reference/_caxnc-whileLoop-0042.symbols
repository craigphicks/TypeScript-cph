=== tests/cases/conformance/_caxnc-loop/_caxnc-whileLoop-0042.ts ===
// declare function next(x:0): 1;
// declare function next(x:1): 2;
// declare function next(x:2): 3;
// declare function next(x:3): 0;
// declare function next(d:D): D;

function t42(){
>t42 : Symbol(t42, Decl(_caxnc-whileLoop-0042.ts, 0, 0))

    type D = 0 | 1 | 2 | 3 ;
>D : Symbol(D, Decl(_caxnc-whileLoop-0042.ts, 6, 15))

    let d1: D = 0;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))
>D : Symbol(D, Decl(_caxnc-whileLoop-0042.ts, 6, 15))

    // @ ts-dev-expect-string "loopCount:4, invocations:1"
    while (true){
        let d2: D = 0;
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))
>D : Symbol(D, Decl(_caxnc-whileLoop-0042.ts, 6, 15))

        // @ts-dev-expect-string "loopCount:7, invocations:5"
        while (true){
            d1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))

            if (d2===0) d2=1;
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))

            else if (d2===1) d2=2;
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))

            else if (d2===2) d2=3;
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))

            else if (d2===3) {
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))

                d2=0; break;
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))
            }
        }
        d2;
>d2 : Symbol(d2, Decl(_caxnc-whileLoop-0042.ts, 11, 11))

        d1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))

        if (d1===0) d1=1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))

        else if (d1===1) d1=2;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))

        else if (d1===2) d1=3;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))

        else if (d1===3) {
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))

            d1=0;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))

            break;
        }
    }
    d1;
>d1 : Symbol(d1, Decl(_caxnc-whileLoop-0042.ts, 8, 7))
}

