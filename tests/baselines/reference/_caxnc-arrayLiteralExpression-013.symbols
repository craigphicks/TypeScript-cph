=== tests/cases/conformance/_caxnc/_caxnc-arrayLiteralExpression-013.ts ===
declare const c: boolean;
>c : Symbol(c, Decl(_caxnc-arrayLiteralExpression-013.ts, 0, 13))

const x:[boolean,boolean] = c ? [c,c] : [c,c];
>x : Symbol(x, Decl(_caxnc-arrayLiteralExpression-013.ts, 2, 5))
>c : Symbol(c, Decl(_caxnc-arrayLiteralExpression-013.ts, 0, 13))
>c : Symbol(c, Decl(_caxnc-arrayLiteralExpression-013.ts, 0, 13))
>c : Symbol(c, Decl(_caxnc-arrayLiteralExpression-013.ts, 0, 13))
>c : Symbol(c, Decl(_caxnc-arrayLiteralExpression-013.ts, 0, 13))
>c : Symbol(c, Decl(_caxnc-arrayLiteralExpression-013.ts, 0, 13))

if (c) {
>c : Symbol(c, Decl(_caxnc-arrayLiteralExpression-013.ts, 0, 13))

    x;
>x : Symbol(x, Decl(_caxnc-arrayLiteralExpression-013.ts, 2, 5))

    // x[0];
    // x[1];
}

