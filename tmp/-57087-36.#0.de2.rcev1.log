checkSatisfiesExpressionWorker[in]: expr:[n26] x, [30,32], Identifier, target:[n25] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }, [42,94], UnionType
  isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }, recursionFlags:Both, intersectionState:, None
    recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }, intersectionState:None, recursionFlags:Both
      unionOrIntersectionRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }, intersectionState:None
        isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t91] { x: 1; y: 1; }, recursionFlags:Target, intersectionState:, None
          recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t91] { x: 1; y: 1; }, intersectionState:None, recursionFlags:Target
            isRelatedTo[in]: originalSource:[t86] 2, originalTarget:[t88] 1, recursionFlags:Both, intersectionState:, None
            isRelatedTo[out]: False
          recursiveTypeRelatedTo[out]: False
        isRelatedTo[out]: False
        isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t92] { x: 2; y: 1; }, recursionFlags:Target, intersectionState:, None
          recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t92] { x: 2; y: 1; }, intersectionState:None, recursionFlags:Target
            isRelatedTo[in]: originalSource:[t86] 2, originalTarget:[t86] 2, recursionFlags:Both, intersectionState:, None
            isRelatedTo[out]: True
          recursiveTypeRelatedTo[out]: False
        isRelatedTo[out]: False
        isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t93] { x: 2; y: 2; }, recursionFlags:Target, intersectionState:, None
          recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t93] { x: 2; y: 2; }, intersectionState:None, recursionFlags:Target
            isRelatedTo[in]: originalSource:[t86] 2, originalTarget:[t86] 2, recursionFlags:Both, intersectionState:, None
            isRelatedTo[out]: True
          recursiveTypeRelatedTo[out]: False
        isRelatedTo[out]: False
      unionOrIntersectionRelatedTo[out]: 0
      typeRelatedToDiscriminatedType[in]: [t90] { x?: 2; y?: 1; }, [t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }
      typeRelatedToDiscriminatedType[out]: False
    recursiveTypeRelatedTo[out]: False
  isRelatedTo[out]: False
  isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }, recursionFlags:Both, intersectionState:, None
    recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }, intersectionState:None, recursionFlags:Both
    recursiveTypeRelatedTo[out]: False
  isRelatedTo[out]: False
  isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }, recursionFlags:Both, intersectionState:, None
    recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }, intersectionState:None, recursionFlags:Both
      unionOrIntersectionRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }, intersectionState:None
        isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t91] { x: 1; y: 1; }, recursionFlags:Target, intersectionState:, None
          recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t91] { x: 1; y: 1; }, intersectionState:None, recursionFlags:Target
          recursiveTypeRelatedTo[out]: False
        isRelatedTo[out]: False
        isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t92] { x: 2; y: 1; }, recursionFlags:Target, intersectionState:, None
          recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t92] { x: 2; y: 1; }, intersectionState:None, recursionFlags:Target
          recursiveTypeRelatedTo[out]: False
        isRelatedTo[out]: False
        isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t93] { x: 2; y: 2; }, recursionFlags:Target, intersectionState:, None
          recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t93] { x: 2; y: 2; }, intersectionState:None, recursionFlags:Target
          recursiveTypeRelatedTo[out]: False
        isRelatedTo[out]: False
        isRelatedTo[in]: originalSource:[t86] 2, originalTarget:[t88] 1, recursionFlags:Both, intersectionState:, None
        isRelatedTo[out]: False
        isRelatedTo[in]: originalSource:[t86] 2, originalTarget:[t86] 2, recursionFlags:Both, intersectionState:, None
        isRelatedTo[out]: True
        isRelatedTo[in]: originalSource:[t86] 2, originalTarget:[t86] 2, recursionFlags:Both, intersectionState:, None
        isRelatedTo[out]: True
        isRelatedTo[in]: originalSource:[t88] 1, originalTarget:[t88] 1, recursionFlags:Both, intersectionState:, None
        isRelatedTo[out]: True
        isRelatedTo[in]: originalSource:[t88] 1, originalTarget:[t86] 2, recursionFlags:Both, intersectionState:, None
        isRelatedTo[out]: False
        isRelatedTo[in]: originalSource:[t90] { x?: 2; y?: 1; }, originalTarget:[t92] { x: 2; y: 1; }, recursionFlags:Target, intersectionState:, None
          recursiveTypeRelatedTo[in]: source:[t90] { x?: 2; y?: 1; }, target:[t92] { x: 2; y: 1; }, intersectionState:None, recursionFlags:Target
            isRelatedTo[in]: originalSource:[t86] 2, originalTarget:[t86] 2, recursionFlags:Both, intersectionState:, None
            isRelatedTo[out]: True
          recursiveTypeRelatedTo[out]: False
        isRelatedTo[out]: False
      unionOrIntersectionRelatedTo[out]: 0
      typeRelatedToDiscriminatedType[in]: [t90] { x?: 2; y?: 1; }, [t94] { x: 1; y: 1; } | { x: 2; y: 1; } | { x: 2; y: 2; }
      typeRelatedToDiscriminatedType[out]: False
    recursiveTypeRelatedTo[out]: False
  isRelatedTo[out]: False
checkSatisfiesExpressionWorker[out]: return: [t90] { x?: 2; y?: 1; }
